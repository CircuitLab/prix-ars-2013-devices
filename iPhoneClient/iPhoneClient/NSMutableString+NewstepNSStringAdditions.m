//
//  NSMutableString+NewstepNSStringAdditions.m
//  Queens Lab QR Code Reader
//
//  Created by „Ç®„É´„ÉÄ „Ç¢„É≥„Éâ„É¨ on H.24/03/30.
//  Copyright (c) Âπ≥Êàê24Âπ¥ „Ç®„É´„ÉÄ „Ç¢„É≥„Éâ„É¨. All rights reserved.
//

#import "NSMutableString+NewstepNSStringAdditions.h"
@interface NSMutableString (Mutability)
- (NSString *)mutableCopy;
+ (NSString *)string;
+ (NSString *)stringWithString:(NSString *)string;
+ (NSString *)stringWithCharacters:(const unichar *)characters length:(NSUInteger)length;
+ (NSString *)stringWithUTF8String:(const char *)nullTerminatedCString;
+ (NSString *)stringWithFormat:(NSString *)format, ... NS_FORMAT_FUNCTION(1,2);
+ (NSString *)localizedStringWithFormat:(NSString *)format, ... NS_FORMAT_FUNCTION(1,2);
@end


@implementation NSMutableString (NewstepNSStringAdditions)
- (void)replaceAllCharacters:(NSString *)characters withString:(NSString *)aString {
	if (self.length > 0) {
		[self replaceOccurrencesOfString:characters withString:aString options:0 range:NSMakeRange(0, self.length)];
	}
}

- (void)removeLastCharacter { 
	if (self.length > 0) {
		[self deleteCharactersInRange:NSMakeRange(self.length-1, 1)];
	}
}

- (void)removeFirstCharacter {
	if (self.length > 0) {
		[self deleteCharactersInRange:NSMakeRange(0, 1)];
	}
}

- (NSString *)immutableCopy { 
	if (self.length > 0) {
		return  [NSString stringWithFormat:@"%@",self];
	}
	
	return @"";
}

- (void)unCapitalizeString { 
	
	NSString *uncapitalizedString = self;
	
	if (self.length > 0) {
		NSString *substringToMakeLowercase = [[self substringToIndex:1] lowercaseString];
		NSString *remainingUppercasePartOfString = [self substringFromIndex:1];
		
		uncapitalizedString = [substringToMakeLowercase stringByAppendingString:remainingUppercasePartOfString];
	}
	
	[self setString:uncapitalizedString];
}


@end

@implementation NSString (NewstepNSStringAdditions)

- (NSString *)stringByRemovingLastCharacter {
	NSString *returnString = self;
	
	if (self.length > 0) {
		NSMutableString *mutableSelf = self.mutableCopy;
		[mutableSelf deleteCharactersInRange:NSMakeRange(self.length-1, 1)];
		returnString = mutableSelf.immutableCopy;
	}
	
	return returnString;
}

- (NSString *)stringByRemovingFirstCharacter {
	NSString *returnString = self;

	if (self.length > 0) {
		NSMutableString *mutableSelf = self.mutableCopy;
		[mutableSelf deleteCharactersInRange:NSMakeRange(0, 1)];
		returnString = mutableSelf.immutableCopy;
	}
	
	return returnString;
}



static const NSString *emojis =@"üòÑüòÉüòÄüòä‚ò∫üòâüòçüòòüòöüòóüòôüòúüòùüòõüò≥üòÅüòîüòåüòíüòûüò£üò¢üòÇüò≠üò™üò•üò∞üòÖüòìüò©üò´üò®üò±üò†üò°üò§üòñüòÜüòãüò∑üòéüò¥üòµüò≤üòüüò¶üòßüòàüëøüòÆüò¨üòêüòïüòØüò∂üòáüòèüòëüë≤üë≥üëÆüë∑üíÇüë∂üë¶üëßüë®üë©üë¥üëµüë±üëºüë∏üò∫üò∏üòªüòΩüòºüôÄüòøüòπüòæüëπüë∫üôàüôâüôäüíÄüëΩüí©üî•‚ú®üåüüí´üí•üí¢üí¶üíßüí§üí®üëÇüëÄüëÉüëÖüëÑüëçüëéüëåüëä‚úä‚úåüëã‚úãüëêüëÜüëáüëâüëàüôåüôè‚òùüëèüí™üö∂üèÉüíÉüë´üë™üë¨üë≠üíèüíëüëØüôÜüôÖüíÅüôãüíÜüíáüíÖüë∞üôéüôçüôáüé©üëëüëíüëüüëûüë°üë†üë¢üëïüëîüëöüëóüéΩüëñüëòüëôüíºüëúüëùüëõüëìüéÄüåÇüíÑüíõüíôüíúüíö‚ù§üíîüíóüíìüíïüíñüíûüíòüíåüíãüíçüíéüë§üë•üí¨üë£üí≠üê∂üê∫üê±üê≠üêπüê∞üê∏üêØüê®üêªüê∑üêΩüêÆüêóüêµüêíüê¥üêëüêòüêºüêßüê¶üê§üê•üê£üêîüêçüê¢üêõüêùüêúüêûüêåüêôüêöüê†üêüüê¨üê≥üêãüêÑüêèüêÄüêÉüêÖüêáüêâüêéüêêüêìüêïüêñüêÅüêÇüê≤üê°üêäüê´üê™üêÜüêàüê©üêæüíêüå∏üå∑üçÄüåπüåªüå∫üçÅüçÉüçÇüåøüåæüçÑüåµüå¥üå≤üå≥üå∞üå±üåºüåêüåûüåùüåöüåëüåíüåìüåîüåïüåñüåóüåòüåúüåõüåôüåçüåéüåèüåãüååüå†‚≠ê‚òÄ‚õÖ‚òÅ‚ö°‚òî‚ùÑ‚õÑüåÄüåÅüåàüåäüéçüíùüééüéíüéìüéèüéÜüéáüéêüéëüéÉüëªüéÖüéÑüéÅüéãüéâüéäüéàüéåüîÆüé•üì∑üìπüìºüíøüìÄüíΩüíæüíªüì±‚òéüìûüìüüì†üì°üì∫üìªüîäüîâüîàüîáüîîüîïüì¢üì£‚è≥‚åõ‚è∞‚åöüîìüîíüîèüîêüîëüîéüí°üî¶üîÜüîÖüîåüîãüîçüõÅüõÄüöøüöΩüîßüî©üî®üö™üö¨üí£üî´üî™üíäüíâüí∞üí¥üíµüí∑üí∂üí≥üí∏üì≤üìßüì•üì§‚úâüì©üì®üìØüì´üì™üì¨üì≠üìÆüì¶üìùüìÑüìÉüìëüìäüìàüìâüìúüìãüìÖüìÜüìáüìÅüìÇ‚úÇüìåüìé‚úí‚úèüìèüìêüìïüìóüìòüìôüììüìîüìíüìöüìñüîñüìõüî¨üî≠üì∞üé®üé¨üé§üéßüéºüéµüé∂üéπüéªüé∫üé∑üé∏üëæüéÆüÉèüé¥üÄÑüé≤üéØüèàüèÄ‚öΩ‚öæüéæüé±üèâüé≥‚õ≥üöµüö¥üèÅüèáüèÜüéøüèÇüèäüèÑüé£‚òïüçµüç∂üçºüç∫üçªüç∏üçπüç∑üç¥üçïüçîüçüüçóüçñüçùüçõüç§üç±üç£üç•üçôüçòüçöüçúüç≤üç¢üç°üç≥üçûüç©üçÆüç¶üç®üçßüéÇüç∞üç™üç´üç¨üç≠üçØüçéüçèüçäüçãüçíüçáüçâüçìüçëüçàüçåüçêüççüç†üçÜüçÖüåΩüè†üè°üè´üè¢üè£üè•üè¶üè™üè©üè®üíí‚õ™üè¨üè§üåáüåÜüèØüè∞‚õ∫üè≠üóºüóæüóªüåÑüåÖüåÉüóΩüåâüé†üé°‚õ≤üé¢üö¢‚õµüö§üö£‚öìüöÄ‚úàüí∫üöÅüöÇüöäüöâüöéüöÜüöÑüöÖüöàüöáüöùüöãüöÉüöéüöåüöçüöôüöòüöóüöïüöñüöõüööüö®üöìüöîüöíüöëüöêüö≤üö°üöüüö†üöúüíàüöèüé´üö¶üö•‚ö†üößüî∞‚õΩüèÆüé∞‚ô®üóøüé™üé≠üìçüö©üáØüáµüá∞üá∑üá©üá™üá®üá≥üá∫üá∏üá´üá∑üá™üá∏üáÆüáπüá∑üá∫üá¨üáßüîüüî¢#‚É£üî£‚¨Ü‚¨á‚¨Ö‚û°üî†üî°üî§‚Üó‚Üñ‚Üò‚Üô‚Üî‚ÜïüîÑ‚óÄ‚ñ∂üîºüîΩ‚Ü©‚Ü™‚Ñπ‚è™‚è©‚è´‚è¨‚§µ‚§¥üÜóüîÄüîÅüîÇüÜïüÜôüÜíüÜìüÜñüì∂üé¶üàÅüàØüà≥üàµüà¥üà≤üâêüàπüà∫üà∂üàöüöªüöπüö∫üöºüöæüö∞üöÆüÖø‚ôøüö≠üà∑üà∏üàÇ‚ìÇüõÇüõÑüõÖüõÉüâë„äô„äóüÜëüÜòüÜîüö´üîûüìµüöØüö±üö≥üö∑üö∏‚õî‚ú≥‚ùá‚ùé‚úÖ‚ú¥üíüüÜöüì≥üì¥üÖ∞üÖ±üÜéüÖæüí†‚ûø‚ôª‚ôà‚ôâ‚ôä‚ôã‚ôå‚ôç‚ôé‚ôè‚ôê‚ôë‚ôí‚ôì‚õéüîØüèßüíπüí≤üí±¬©¬Æ‚Ñ¢‚ùå‚Äº‚Åâ‚ùó‚ùì‚ùï‚ùî‚≠ïüîùüîöüîôüîõüîúüîÉüïõüïßüïêüïúüïëüïùüïíüïûüïìüïüüïîüï†üïïüï°üïñüï¢üïóüï£üïòüï§üïôüï•üïöüï¶‚úñ‚ûï‚ûñ‚ûó‚ô†‚ô•‚ô£‚ô¶üíÆüíØ‚úî‚òëüîòüîó‚û∞„Ä∞„ÄΩüî±‚óº‚óª‚óæ‚óΩ‚ñ™‚ñ´üî∫üî≤üî≥‚ö´‚ö™üî¥üîµüîª‚¨ú‚¨õüî∂üî∑üî∏üîπ";/*1‚É£2‚É£3‚É£4‚É£5‚É£6‚É£7‚É£8‚É£9‚É£0‚É£*/

static const NSString *utf8Emojis = @"‚òÄ‚òÅ‚òÇ‚òÉ‚òÑ‚òÖ‚òÜ‚òá‚òà‚òâ‚òä‚òã‚òå‚òç‚òé‚òè‚òê‚òë‚òí‚òì‚òî‚òï‚òñ‚òó‚òò‚òô‚òö‚òõ‚òú‚òù‚òû‚òü‚ò†‚ò°‚ò¢‚ò£‚ò§‚ò•‚ò¶‚òß‚ò®‚ò©‚ò™‚ò´‚ò¨‚ò≠‚òÆ‚òØ‚ò∞‚ò±‚ò≤‚ò≥‚ò¥‚òµ‚ò∂‚ò∑‚ò∏‚òπ‚ò∫‚òª‚òº‚òΩ‚òæ‚òø‚ôÄ‚ôÅ‚ôÇ‚ôÉ‚ôÑ‚ôÖ‚ôÜ‚ôá‚ôà‚ôâ‚ôä‚ôã‚ôå‚ôç‚ôé‚ôè‚ôê‚ôë‚ôí‚ôì‚ôî‚ôï‚ôñ‚ôó‚ôò‚ôô‚ôö‚ôõ‚ôú‚ôù‚ôû‚ôü‚ô†‚ô°‚ô¢‚ô£‚ô§‚ô•‚ô¶‚ôß‚ô®‚ô©‚ô™‚ô´‚ô¨‚ô≠‚ôÆ‚ôØ‚ô∞‚ô±‚ô≤‚ô≥‚ô¥‚ôµ‚ô∂‚ô∑‚ô∏‚ôπ‚ô∫‚ôª‚ôº‚ôΩ‚ôæ‚ôø‚öÄ‚öÅ‚öÇ‚öÉ‚öÑ‚öÖ‚öÜ‚öá‚öà‚öâ‚öä‚öã‚öå‚öç‚öé‚öè‚öê‚öë‚öí‚öì‚öî‚öï‚öñ‚öó‚öò‚öô‚öö‚öõ‚öú‚öù‚öû‚öü‚ö†‚ö°‚ö¢‚ö£‚ö§‚ö•‚ö¶‚öß‚ö®‚ö©‚ö™‚ö´‚ö¨‚ö≠‚öÆ‚öØ‚ö∞‚ö±‚ö≤‚ö≥‚ö¥‚öµ‚ö∂‚ö∑‚ö∏‚öπ‚ö∫‚öª‚öº‚öΩ‚öæ‚öø‚õÄ‚õÅ‚õÇ‚õÉ‚õÑ‚õÖ‚õÜ‚õá‚õà‚õâ‚õä‚õã‚õå‚õç‚õé‚õè‚õê‚õë‚õí‚õì‚õî‚õï‚õñ‚õó‚õò‚õô‚õö‚õõ‚õú‚õù‚õû‚õü‚õ†‚õ°‚õ¢‚õ£‚õ§‚õ•‚õ¶‚õß‚õ®‚õ©‚õ™‚õ´‚õ¨‚õ≠‚õÆ‚õØ‚õ∞‚õ±‚õ≤‚õ≥‚õ¥‚õµ‚õ∂‚õ∑‚õ∏‚õπ‚õ∫‚õª‚õº‚õΩ‚õæ‚õø";

- (NSString *)unCapitalizedString { 
	
	NSString *uncapitalizedString = @"";
	
	if (self.length > 0) {
		NSString *substringToMakeLowercase = [[self substringToIndex:1] lowercaseString];
		NSString *remainingUppercasePartOfString = [self substringFromIndex:1];
		
		uncapitalizedString = [substringToMakeLowercase stringByAppendingString:remainingUppercasePartOfString];
	}
	
	return uncapitalizedString;
}

- (NSURL *)fileURL {
	return [NSURL fileURLWithPath:self];
}

- (NSURL *)url {
	return [NSURL URLWithString:self];
}

- (NSNumber *)number {
	NSNumberFormatter *formatterForProductNumber = [[NSNumberFormatter alloc] init];
	NSNumber *number = [formatterForProductNumber numberFromString:self];
	return number;
}

- (NSDate *)isoGMTDate {	
	NSDate *formattedDateString = [self isoDateWithTimeZoneAbbreviation:nil usingFormat:nil];
	return formattedDateString;
}

- (NSDate *)isoDateWithTimeZoneAbbreviation:(NSString *)timeZone usingFormat:(NSString *)format {
	NSLocale *enUSPosixLocale = [[NSLocale alloc] initWithLocaleIdentifier:@"en_US"];
	NSDateFormatter *commaSeparatedDateFormatter = [[NSDateFormatter alloc] init];
	
	if (nil == timeZone) {
		commaSeparatedDateFormatter.dateFormat = @"yyyy/MM/dd HH:mm:ss";
		commaSeparatedDateFormatter.timeZone = [NSTimeZone timeZoneWithAbbreviation:@"GMT"];
	} else {
		commaSeparatedDateFormatter.dateFormat = @"yyyy/MM/dd HH:mm:ss zzz";
		commaSeparatedDateFormatter.timeZone = [NSTimeZone timeZoneWithAbbreviation:timeZone];
	}
	
	if (nil != format) {
		commaSeparatedDateFormatter.dateFormat = format;
	}
	
	commaSeparatedDateFormatter.locale = enUSPosixLocale;
	
	NSDate *formattedDateString = [commaSeparatedDateFormatter dateFromString:self];
	return formattedDateString;
}

- (NSString *)allEmojiCharacters {
	return (NSString *)emojis;
}

- (NSString *)utf8SafeEmojiCharacters {
	return (NSString *)utf8Emojis;
}

- (BOOL)isEmoji {
	BOOL isEmoji = NO;
	if ([self rangeOfCharacterFromSet:[NSCharacterSet emojiCharacterSet]].length > 0) {
		isEmoji = YES;
	}
	return isEmoji;
}

- (BOOL)isUTF16Emoji {
	BOOL isEmoji = NO;
	if ([self rangeOfCharacterFromSet:[NSCharacterSet utf16EmojiCharacterSet]].length > 0) {
		isEmoji = YES;
	}
	return isEmoji;
}

- (BOOL)isNotBlessedEnglish {
	NSArray *englishShit = @[@"q",@"w",@"e",@"r",@"t",@"y",@"u",@"i",@"o",@"p",@"a",@"s",@"d",@"f",@"g",@"h",@"j",@"k",@"l",@"z",@"x",@"c",@"v",@"b",@"n",@"m",@"Q",@"W",@"E",@"R",@"T",@"Y",@"U",@"I",@"O",@"P",@"A",@"S",@"D",@"F",@"G",@"H",@"J",@"K",@"L",@"Z",@"X",@"C",@"V",@"B",@"N",@"M",@"1",@"2",@"3",@"4",@"5",@"6",@"7",@"8",@"9",@"0",@"_",@"-",@".",@"\n",@"",@" "];
	
	BOOL foundShitEngishCharacter = NO;
	
	for (NSString *shitEnglishString in englishShit) {
		if ([self rangeOfString:shitEnglishString].length != 0 || [self isEqualToString:shitEnglishString]) {
			foundShitEngishCharacter = YES;
		}
	}
	
	return  !foundShitEngishCharacter;
}

- (BOOL)containsDiactric {
	NSArray *diactrics = @[@"√Ä",@"√Å",@"√Ç",@"√É",@"√Ñ",@"√Ö",@"√Ü",@"√á",@"√à",@"√â",@"√ä",@"√ã",@"√å",@"√ç",@"√é",@"√è",@"√ê",@"√ë",@"√í",@"√ì",@"√î",@"√ï",@"√ñ",@"√ó",@"√ò",@"√ô",@"√ö",@"√õ",@"√ú",@"√ù",@"√û",@"√ü",@"√†",@"√°",@"√¢",@"√£",@"√§",@"√•",@"√¶",@"√ß",@"√®",@"√©",@"√™",@"√´",@"√¨",@"√≠",@"√Æ",@"√Ø",@"√∞",@"√±",@"√≤",@"√≥",@"√¥",@"√µ",@"√∂",@"√∑",@"√∏",@"√π",@"√∫",@"√ª",@"√º",@"√Ω",@"√æ",@"√ø",@"AÃß",@"aÃß",@"√á",@"√ß",@"·∏à",@"·∏â",@"·∏ê",@"·∏ë",@"»®",@"»©",@"·∏ú",@"·∏ù",@"∆èÃß",@"…ôÃß",@"∆êÃß",@"…õÃß",@"ƒ¢",@"ƒ£",@"·∏®",@"·∏©",@"IÃß",@"iÃß",@"∆óÃß",@"…®Ãß",@"ƒ∂",@"ƒ∑",@"ƒª",@"ƒº",@"MÃß",@"mÃß",@"≈Ö",@"≈Ü",@"OÃß",@"oÃß",@"∆ÜÃß",@"…îÃß",@"√ÜÃß",@"√¶Ãß",@"≈íÃß",@"≈ìÃß",@"≈ñ",@"≈ó",@"≈û",@"≈ü",@"≈¢",@"≈£",@"UÃß",@"uÃß",@"ZÃß",@"zÃß"];
	
	BOOL foundDiactric = NO;
	
	for (NSString *diactricString in diactrics) {
		if ([self rangeOfString:diactricString].length != 0 || [self isEqualToString:diactricString]) {
			foundDiactric = YES;
		}
	}
	
	return  foundDiactric;
}

@end



@implementation NSCharacterSet (EmojisAddition)

+ (NSCharacterSet*)emojiCharacterSet {
    return [NSCharacterSet characterSetWithCharactersInString:(NSString *)emojis];
}

+ (NSCharacterSet *)utf16EmojiCharacterSet {
	NSMutableCharacterSet *utf16OnlyCharacterSet = [NSMutableCharacterSet characterSetWithCharactersInString:(NSString *)emojis];
	[utf16OnlyCharacterSet removeCharactersInString:(NSString *)utf8Emojis];
	return utf16OnlyCharacterSet;
}

+ (NSCharacterSet*)utf8emojICharacterSet {
    return [NSCharacterSet characterSetWithCharactersInString:(NSString *)utf8Emojis];
}



@end